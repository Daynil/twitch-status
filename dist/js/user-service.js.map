{"version":3,"sources":["user-service.ts"],"names":["TwitchUser","TwitchUser.constructor","UserService","UserService.constructor","UserService.getTwitch","UserService.getProgrammingChannels","UserService.getLiveStreamInfo","UserService.getFullList","UserService.handleError"],"mappings":"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","file":"user-service.js","sourcesContent":["import { Http, HTTP_PROVIDERS } from 'angular2/http';\r\nimport { Observable } from 'angular2/angular2';\r\nimport { Injectable } from 'angular2/core';\r\n\r\nexport class TwitchUser {\r\n\tpopularity: number;  // Stream view count, for sorting\r\n\t\r\n\tisLive: boolean;\r\n\tdescription: string;\r\n\tviewers: number;\r\n\tpreviewUrl: string;\r\n\t\r\n\tconstructor(public name: string, public iconUrl: string, public channelUrl: string) { }\r\n}\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\tbaseUrl = 'https://api.twitch.tv/kraken/';\r\n\t\r\n\ttwitchUserList: TwitchUser[] = [];\r\n\taUser: string;\r\n\t\r\n\tconstructor (public http: Http) {\r\n\t\tthis.getProgrammingChannels('medrybw', '1')\r\n\t\t\t.subscribe( \r\n\t\t\t\tchannelInfo => {\r\n\t\t\t\t\tlet baseObject = channelInfo.channels[0];\r\n\t\t\t\t\tlet alwaysLive = new TwitchUser(baseObject.display_name, baseObject.logo, baseObject.url);\r\n\t\t\t\t\talwaysLive.popularity = baseObject.views;\r\n\t\t\t\t\tthis.getLiveStreamInfo(alwaysLive.name.toLowerCase())\r\n\t\t\t\t\t\t.subscribe(\r\n\t\t\t\t\t\t\tstreamInfo => {\r\n\t\t\t\t\t\t\t\talwaysLive.isLive = (streamInfo.stream) ? true : false;\r\n\t\t\t\t\t\t\t\tif (alwaysLive.isLive) {\r\n\t\t\t\t\t\t\t\t\talwaysLive.description = streamInfo.stream.channel.status;\r\n\t\t\t\t\t\t\t\t\talwaysLive.viewers = streamInfo.stream.viewers;\r\n\t\t\t\t\t\t\t\t\tif (streamInfo.preview) alwaysLive.previewUrl = streamInfo.preview.small;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.twitchUserList.push(alwaysLive);\r\n\t\t\t\t\t\t\t\tconsole.log(this.twitchUserList);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terr => this.handleError(err)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\terr => this.handleError(err)\r\n\t\t\t);\r\n\t }\r\n\t\r\n\tgetTwitch() {\r\n\t\t\r\n\t}\r\n\t\r\n\tgetProgrammingChannels(query: string, resultLimit: string): Observable<any> {\r\n\t\treturn this.http.get( `${this.baseUrl}search/channels?q=${query}&limit=${resultLimit}` )\r\n\t\t\t\t\t\t.map(res => res.json());\r\n\t}\r\n\t\r\n\tgetLiveStreamInfo(channelName: string): Observable<any> {\r\n\t\treturn this.http.get( `${this.baseUrl}streams/${channelName}` )\r\n\t\t\t\t\t\t.map(res => res.json());\r\n\t}\r\n\t\r\n\tgetFullList() {\r\n\t\tthis.getProgrammingChannels('programming', '100')\r\n\t\t\t.subscribe (\r\n\t\t\t\tchannelList => {\r\n\t\t\t\t\tconsole.log(channelList);\r\n\t\t\t\t},\r\n\t\t\t\terr => this.handleError(err)\r\n\t\t\t);\r\n\t}\r\n\t\r\n\thandleError(error) {\r\n\t\tconsole.log('Some problem, yo: ' + error);\r\n\t}\r\n}"],"sourceRoot":"/source/"}