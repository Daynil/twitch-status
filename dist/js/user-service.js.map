{"version":3,"sources":["user-service.ts"],"names":["TwitchUser","TwitchUser.constructor","UserService","UserService.constructor","UserService.filtering","UserService.filterLive","UserService.removeDupes","UserService.getChannels","UserService.getLiveStreamInfo","UserService.isUniqueUser","UserService.setDescription","UserService.findChannel","UserService.getCoding","UserService.clearStreams","UserService.handleError"],"mappings":"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","file":"user-service.js","sourcesContent":["import { Http, HTTP_PROVIDERS } from 'angular2/http';\r\nimport { Observable } from 'angular2/angular2';\r\nimport { Injectable } from 'angular2/core';\r\n\r\nexport class TwitchUser {\r\n\ticonUrl: string;\r\n\tpopularity: number;  // Stream view count, for sorting\r\n\t\r\n\tisLive: boolean;\r\n\tdescription: string;\r\n\tdescriptionFull: string;\r\n\tviewers: number;\r\n\tpreviewUrl: string;\r\n\t\r\n\tconstructor(public name: string, public channelUrl: string) { }\r\n}\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\tbaseUrl = 'https://api.twitch.tv/kraken/';\r\n\t\r\n\ttwitchUserList: TwitchUser[] = [];\r\n\tbufferUserList: TwitchUser[] = [];\r\n\tfilteredUserList: TwitchUser[] = [];\r\n\tliveFilter: string = \"All\";\r\n\ttwitchIcon = 'http://www-cdn.jtvnw.net/images/xarth/footer_glitch.png';\r\n\t\r\n\tconstructor (public http: Http) {\r\n\t\t// Add FCC suggested coding streamers\r\n\t\tthis.findChannel('freecodecamp');\r\n\t\tthis.findChannel('medrybw');\r\n\t\tthis.findChannel('terakilobyte');\r\n\t\tthis.findChannel('habathcx');\r\n\t\tthis.findChannel('robotcaleb');\r\n\t\tthis.findChannel('thomasballinger');\r\n\t\tthis.findChannel('noobs2ninjas');\r\n\t\tthis.findChannel('beohoff');\r\n\t}\r\n\t\r\n\tfiltering(filterText: string) {\r\n\t\tlet currUserList;\r\n\t\tswitch (this.liveFilter) {\r\n\t\t\tcase \"All\":\r\n\t\t\t\tcurrUserList = this.twitchUserList;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Live\":\r\n\t\t\t\tcurrUserList = this.twitchUserList.filter( user => {return user.isLive} );\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Offline\":\r\n\t\t\t\tcurrUserList = this.twitchUserList.filter( user => {return !user.isLive} );\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (filterText.length === 0) this.filteredUserList = currUserList;\r\n\t\telse {\r\n\t\t\tthis.filteredUserList = currUserList.filter(\r\n\t\t\t\tuser => {\r\n\t\t\t\t\tlet regText = \"\";\r\n\t\t\t\t\tfilterText.toLowerCase().split(\"\").map( letter => regText += \".*\" + letter );\r\n\t\t\t\t\tlet filterRegex = new RegExp(regText, \"ig\");\r\n\t\t\t\t\treturn filterRegex.test(user.name);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfilterLive(type: string) {\r\n\t\tswitch (type) {\r\n\t\t\tcase \"All\":\r\n\t\t\t\tthis.liveFilter = \"All\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Live\":\r\n\t\t\t\tthis.liveFilter = \"Live\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Offline\":\r\n\t\t\t\tthis.liveFilter = \"Offline\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.filtering(\"\");\r\n\t}\r\n\t\r\n\tremoveDupes(array: any[]): any[] {\r\n\t\treturn array.filter( (item, currPos) => { return array.indexOf(item) == currPos; } );\r\n\t}\r\n\t\r\n\tgetChannels(query: string, resultLimit: string): Observable<any> {\r\n\t\treturn this.http.get( `${this.baseUrl}search/channels?q=${query}&limit=${resultLimit}` )\r\n\t\t\t\t\t\t.map(res => res.json());\r\n\t}\r\n\t\r\n\tgetLiveStreamInfo(channelName: string): Observable<any> {\r\n\t\treturn this.http.get( `${this.baseUrl}streams/${channelName}` )\r\n\t\t\t\t\t\t.map(res => res.json());\r\n\t}\r\n\t\r\n\tisUniqueUser(userName: string) {\r\n\t\tlet isUnique = true;\r\n\t\tthis.twitchUserList.map(\r\n\t\t\tuser => {\r\n\t\t\t\tif (user.name.toLowerCase() == userName.toLowerCase()) isUnique = false;\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn isUnique;\r\n\t}\r\n\t\r\n\tsetDescription(channel: TwitchUser, description: string) {\r\n\t\tif (description.length > 20) {\r\n\t\t\tchannel.description =  description.substring(0, 21) + '...';\r\n\t\t\tchannel.descriptionFull = description;\r\n\t\t}\r\n\t\telse channel.description = channel.descriptionFull = description;\r\n\t}\r\n\t\r\n\tfindChannel(channelName: string) {\r\n\t\tthis.getChannels(channelName, '1')\r\n\t\t\t.subscribe( \r\n\t\t\t\tchannelInfo => {\r\n\t\t\t\t\tif (!channelInfo.channels[0]) {\r\n\t\t\t\t\t\tconsole.log(\"no results\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t};\r\n\t\t\t\t\tlet baseObject = channelInfo.channels[0];\r\n\t\t\t\t\tif (baseObject.display_name.toLowerCase() != channelName.toLowerCase()) {\r\n\t\t\t\t\t\tconsole.log(\"result not equal to requested channel\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} else if (!this.isUniqueUser(baseObject.display_name)) { // Ignore duplicate requests\t\r\n\t\t\t\t\t\tconsole.log(\"duplicate request\");\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t} \r\n\t\t\t\t\tlet resultChannel = new TwitchUser(baseObject.display_name, baseObject.url);\r\n\t\t\t\t\tif (baseObject.logo) resultChannel.iconUrl = baseObject.logo;\r\n\t\t\t\t\telse resultChannel.iconUrl = this.twitchIcon;\r\n\t\t\t\t\tresultChannel.popularity = baseObject.views;\r\n\t\t\t\t\tthis.getLiveStreamInfo(resultChannel.name.toLowerCase())\r\n\t\t\t\t\t\t.subscribe(\r\n\t\t\t\t\t\t\tstreamInfo => {\r\n\t\t\t\t\t\t\t\tresultChannel.isLive = (streamInfo.stream) ? true : false;\r\n\t\t\t\t\t\t\t\tif (resultChannel.isLive) {\r\n\t\t\t\t\t\t\t\t\tthis.setDescription(resultChannel, streamInfo.stream.channel.status);\r\n\t\t\t\t\t\t\t\t\tresultChannel.viewers = streamInfo.stream.viewers;\r\n\t\t\t\t\t\t\t\t\tif (streamInfo.preview) resultChannel.previewUrl = streamInfo.preview.small;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.twitchUserList.push(resultChannel);\r\n\t\t\t\t\t\t\t\tthis.filteredUserList.push(resultChannel);\t\r\n\t\t\t\t\t\t\t\tconsole.log(this.twitchUserList);\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\terr => this.handleError(err)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\terr => this.handleError(err)\r\n\t\t\t);\r\n\t}\r\n\t\r\n\tgetCoding(amount: string) {\r\n\t\t// If we already have a buffer list, add new items to display list until requested amount\r\n\t\tif (this.bufferUserList.length > 50) {\r\n\t\t\tlet counter = 1;\r\n\t\t\tthis.bufferUserList.map( \r\n\t\t\t\tuser => {\r\n\t\t\t\t\tif (counter <= parseInt(amount)) {\r\n\t\t\t\t\t\tif (this.twitchUserList.indexOf(user) < 0) {\r\n\t\t\t\t\t\t\tthis.twitchUserList.push(user);\r\n\t\t\t\t\t\t\tthis.filteredUserList.push(user);\r\n\t\t\t\t\t\t\tcounter++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Get maximum available results from twitch first time to store as a buffer but display only requested amount\r\n\t\tlet initialLength = this.twitchUserList.length;\r\n\t\tthis.getChannels('programming', '100')\r\n\t\t\t.subscribe (\r\n\t\t\t\tchannelList => {\r\n\t\t\t\t\tlet channelArray: any[] = channelList.channels;\r\n\t\t\t\t\tchannelArray.map( channel => {\r\n\t\t\t\t\t\tlet userChannel = new TwitchUser(channel.display_name, channel.url);\r\n\t\t\t\t\t\tif (channel.logo) userChannel.iconUrl = channel.logo;\r\n\t\t\t\t\t\telse userChannel.iconUrl = this.twitchIcon;\r\n\t\t\t\t\t\tuserChannel.popularity = channel.views;\r\n\t\t\t\t\t\tthis.getLiveStreamInfo(userChannel.name.toLowerCase())\r\n\t\t\t\t\t\t\t.subscribe(\r\n\t\t\t\t\t\t\t\tstreamInfo => {\r\n\t\t\t\t\t\t\t\t\tuserChannel.isLive = (streamInfo.stream) ? true : false;\r\n\t\t\t\t\t\t\t\t\tif (userChannel.isLive) {\r\n\t\t\t\t\t\t\t\t\t\tthis.setDescription(userChannel, streamInfo.stream.channel.status);\r\n\t\t\t\t\t\t\t\t\t\tuserChannel.viewers = streamInfo.stream.viewers;\r\n\t\t\t\t\t\t\t\t\t\tif (streamInfo.preview) userChannel.previewUrl = streamInfo.preview.small;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.bufferUserList.push(userChannel);\r\n\t\t\t\t\t\t\t\t\tlet amountAdded = this.twitchUserList.length - initialLength;\r\n\t\t\t\t\t\t\t\t\tif (amountAdded < parseInt(amount)) {\r\n\t\t\t\t\t\t\t\t\t\tthis.twitchUserList.push(userChannel);\r\n\t\t\t\t\t\t\t\t\t\tthis.filteredUserList.push(userChannel);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\terr => this.handleError(err)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\terr => this.handleError(err)\r\n\t\t\t);\r\n\t}\r\n\t\r\n\tclearStreams() {\r\n\t\tthis.twitchUserList = [];\r\n\t\tthis.bufferUserList = [];\r\n\t\tthis.filteredUserList = [];\r\n\t}\r\n\t\r\n\thandleError(error) {\r\n\t\tconsole.log('Some problem, yo: ' + error);\r\n\t}\r\n}"],"sourceRoot":"/source/"}