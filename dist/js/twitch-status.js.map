{"version":3,"sources":["twitch-status.ts"],"names":["TwitchStatus","TwitchStatus.constructor","TwitchStatus.getCoding","TwitchStatus.filtering","TwitchStatus.liveFilter"],"mappings":";;;;;;;;;;;AAAA,yBAA0D,mBAAmB,CAAC,CAAA;AAC9E,qBAA6B,eAC7B,CAAC,CAD2C;AAC5C,6BAA0B,gBAC1B,CAAC,CADyC;AAC1C,4BAAyB,eAGzB,CAAC,CAHuC;AAExC,qBAAqB;AACrB;IAeEA,sBAAmBA,WAAwBA;QAAxBC,gBAAWA,GAAXA,WAAWA,CAAaA;IAE3CA,CAACA;IAEDD,gCAASA,GAATA,UAAUA,MAAcA;QACvBE,EAAEA,CAACA,CAACA,CAACA,MAAMA,IAAIA,IAAIA,CAACA,IAAIA,CAACA,MAAMA,CAACA,CAACA;YAACA,MAAMA,CAACA;QACzCA,IAAIA,CAACA,WAAWA,CAACA,SAASA,CAACA,MAAMA,CAACA,CAACA;IACpCA,CAACA;IAEDF,gCAASA,GAATA,UAAUA,UAAkBA;QAC3BG,IAAIA,CAACA,WAAWA,CAACA,SAASA,CAACA,UAAUA,CAACA,CAACA;IACxCA,CAACA;IAEDH,iCAAUA,GAAVA,UAAWA,IAAYA;QACtBI,IAAIA,CAACA,WAAWA,CAACA,UAAUA,CAACA,IAAIA,CAACA,CAACA;IACnCA,CAACA;IA9BHJ;QAACA,oBAASA,CAACA;YACTA,QAAQA,EAAEA,eAAeA;YACzBA,YAAYA,EAAEA,CAACA,0BAAWA,CAACA;SAC5BA,CAACA;QACDA,eAAIA,CAACA;YACJA,WAAWA,EAAEA,4BAA4BA;YACzCA,SAASA,EAAEA,CAACA,0BAA0BA,CAACA;YACvCA,UAAUA,EAAEA,CAACA,0BAAeA,EAAEA,wBAAUA,CAACA;SAC1CA,CAACA;;qBAwBDA;IAADA,mBAACA;AAADA,CAhCA,AAgCCA,IAAA;AAED,oBAAS,CAAC,YAAY,EAAE,CAAC,qBAAc,CAAC,CAAC;KACvC,IAAI,CACJ,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAApB,CAAoB,EAC/B,UAAA,KAAK,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,CAC3B,CAAC","file":"twitch-status.js","sourcesContent":["import {Component, View, CORE_DIRECTIVES, bootstrap} from 'angular2/angular2';\nimport {HTTP_PROVIDERS} from 'angular2/http'\nimport {UserService} from './user-service'\nimport {TwitchUser} from './twitch-user'\n\n// Annotation section\n@Component({\n  selector: 'twitch-status',\n  viewBindings: [UserService]\n})\n@View({\n  templateUrl: '../html/twitch-status.html',\n  styleUrls: ['../css/twitch-status.css'],\n  directives: [CORE_DIRECTIVES, TwitchUser]\n})\n// Component controller\nclass TwitchStatus {\n  name: string;\n  quote: string;\n  twitchResult: string;\n  \n  constructor(public userService: UserService) {\n\t  \n  }\n  \n  getCoding(amount: string) {\n\t  if (!amount || /\\D/.test(amount)) return;\n\t  this.userService.getCoding(amount);\n  }\n  \n  filtering(filterText: string) {\n\t  this.userService.filtering(filterText);\n  }\n  \n  liveFilter(type: string) {\n\t  this.userService.filterLive(type);\n  }\n  \t\n}\n\nbootstrap(TwitchStatus, [HTTP_PROVIDERS])\n\t.then(\n\t\tsuccess => console.log(success),\n\t\terror => console.log(error)\n\t);\n"],"sourceRoot":"/source/"}